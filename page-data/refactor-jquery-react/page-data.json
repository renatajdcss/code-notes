{"componentChunkName":"component---node-modules-gatsby-theme-code-notes-src-templates-note-js","path":"/refactor-jquery-react/","result":{"data":{"mdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Refactoring Simple JQuery site to React\",\n  \"tags\": [\"React\", \"JavaScript\", \"Webpack\"],\n  \"emoji\": \"ðŸš§\",\n  \"link\": \"https://michaelwashburnjr.com/2018/01/30/refactoring-jquery-react/\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", {\n    \"id\": \"refactoring-jquery-to-react\"\n  }, \"Refactoring JQuery to React\"), mdx(\"p\", null, mdx(\"em\", {\n    parentName: \"p\"\n  }, \"source: \", mdx(\"a\", _extends({\n    parentName: \"em\"\n  }, {\n    \"href\": \"https://michaelwashburnjr.com/2018/01/30/refactoring-jquery-react/\"\n  }), \"michaelwashburnjr.com/20...ct/\")), \"\\n\", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"(updated to work with latest webpack/react/babel modules)\")), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Init npm\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"npm init\"))), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Create \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"src\"), \" dir and copy(or move) main.js and index.html\")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Setup Webpack\"), mdx(\"blockquote\", {\n    parentName: \"li\"\n  }, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"webpack 4.x | babel-loader 8.x | babel 7.x\\n\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"npm install -D babel-loader @babel/core @babel/preset-env webpack\")), mdx(\"ul\", {\n    parentName: \"blockquote\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"For webpack 4 we need to change \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"loaders\"), \" to \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"rules\")))))), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"webpack.config.js\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"// normalize path\\nconst path = require('path');\\n// import webpack\\nconst webpack = require('webpack');\\n// handle copying of index.html file\\nconst HtmlWebpackPlugin = require('html-webpack-plugin');\\n// build and src dirs location\\nvar BUILD_DIR = path.join(__dirname, 'dist');\\nvar SRC_DIR = path.join(__dirname, 'src');\\n\\n// these values get made public to anything importing this file\\nmodule.exports = {\\n  // defines the entry point so the bundler knows where to start\\n  entry: \\\"./src/main.js\\\",\\n  // designates where the JS bundle is saved\\n  output: { path: BUILD_DIR, filename: \\\"bundle.js\\\" },\\n  // tells the webpack-dev-server to serve content from the build directory\\n  devServer: {\\n    contentBase: BUILD_DIR,\\n  },\\n  // handles compilation of JSX\\n  module: {\\n      // loaders changed to rules on latest webpack\\n    rules: [\\n      {\\n        test: /.js?$/,\\n        loader: \\\"babel-loader\\\",\\n        exclude: /node_modules/,\\n        query: {\\n          presets: [\\\"@babel/preset-env\\\", \\\"@babel/react\\\"],\\n        },\\n      },\\n    ],\\n  },\\n  // handles the copying of the Index.html file to the build dir\\n  plugins: [\\n    new HtmlWebpackPlugin({\\n      hash: true,\\n      filename: \\\"index.html\\\",\\n      template: SRC_DIR + \\\"/index.html\\\",\\n    }),\\n  ],\\n};\\n\")), mdx(\"ol\", {\n    \"start\": 4\n  }, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Update \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"package.json\"))), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-json\"\n  }), \"  \\\"scripts\\\": {\\n    ...\\n    \\\"build\\\": \\\"webpack --config webpack.config.js\\\",\\n    \\\"start\\\": \\\"webpack-dev-server --progress --colors\\\"\\n  }\\n\")), mdx(\"ol\", {\n    \"start\": 5\n  }, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Run \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"npm run build\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"npm run start\"), \" to test\")));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":"Refactoring Simple JQuery site to React","tags":["React","JavaScript","Webpack"],"emoji":"ðŸš§","link":"https://michaelwashburnjr.com/2018/01/30/refactoring-jquery-react/"},"fields":{"dateModified":"27th Jul 2020","slug":"/refactor-jquery-react/"},"tableOfContents":{"items":[{"url":"#refactoring-jquery-to-react","title":"Refactoring JQuery to React"}]},"parent":{"__typename":"File","relativePath":"refactor-jquery-react.md"}}},"pageContext":{"id":"e219741e-e1fd-5455-a768-74a9151c9153","previous":{"id":"8375f021-c927-57e4-8289-58a1639216ef","frontmatter":{"title":"Regular Expressions","tags":["regex"]},"fields":{"slug":"/regex/"}},"next":{"id":"c7403a7c-5bac-553b-9b01-976067ca1e2b","frontmatter":{"title":"React Hooks","tags":["Reactjs","React-hooks"]},"fields":{"slug":"/react-hooks/"}},"hasUntagged":false,"basePath":"/"}}}